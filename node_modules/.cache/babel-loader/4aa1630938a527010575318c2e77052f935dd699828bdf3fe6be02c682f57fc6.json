{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack\\\\ReactExperiments\\\\exp15\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport WeatherCard from './components/WeatherCard';\nimport WeatherForm from './components/WeatherForm';\nimport WeatherForecast from './components/WeatherForecast';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport ErrorMessage from './components/ErrorMessage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [city, setCity] = useState('London');\n\n  // Default weather data for demonstration\n  const defaultWeather = {\n    name: 'London',\n    main: {\n      temp: 15,\n      feels_like: 13,\n      humidity: 65,\n      pressure: 1013\n    },\n    weather: [{\n      main: 'Clouds',\n      description: 'overcast clouds',\n      icon: '04d'\n    }],\n    wind: {\n      speed: 3.5\n    },\n    visibility: 10000\n  };\n  const defaultForecast = [{\n    dt: Date.now() + 86400000,\n    main: {\n      temp: 16,\n      humidity: 70\n    },\n    weather: [{\n      main: 'Rain',\n      description: 'light rain',\n      icon: '10d'\n    }],\n    wind: {\n      speed: 4.2\n    }\n  }, {\n    dt: Date.now() + 172800000,\n    main: {\n      temp: 18,\n      humidity: 60\n    },\n    weather: [{\n      main: 'Clear',\n      description: 'clear sky',\n      icon: '01d'\n    }],\n    wind: {\n      speed: 2.8\n    }\n  }, {\n    dt: Date.now() + 259200000,\n    main: {\n      temp: 14,\n      humidity: 80\n    },\n    weather: [{\n      main: 'Clouds',\n      description: 'few clouds',\n      icon: '02d'\n    }],\n    wind: {\n      speed: 3.1\n    }\n  }, {\n    dt: Date.now() + 345600000,\n    main: {\n      temp: 20,\n      humidity: 55\n    },\n    weather: [{\n      main: 'Sunny',\n      description: 'sunny',\n      icon: '01d'\n    }],\n    wind: {\n      speed: 2.5\n    }\n  }, {\n    dt: Date.now() + 432000000,\n    main: {\n      temp: 17,\n      humidity: 65\n    },\n    weather: [{\n      main: 'Clouds',\n      description: 'scattered clouds',\n      icon: '03d'\n    }],\n    wind: {\n      speed: 3.8\n    }\n  }];\n  useEffect(() => {\n    // Initialize with default data\n    setWeatherData(defaultWeather);\n    setForecastData(defaultForecast);\n  }, []);\n  const handleSearch = async searchCity => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Simulate API call with timeout\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // For demo purposes, we'll use mock data\n      // In a real app, you would call a weather API here\n      const mockWeather = {\n        ...defaultWeather,\n        name: searchCity,\n        main: {\n          ...defaultWeather.main,\n          temp: Math.floor(Math.random() * 20) + 5\n        }\n      };\n      setWeatherData(mockWeather);\n      setCity(searchCity);\n    } catch (err) {\n      setError('Failed to fetch weather data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get current weather and forecast for any city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForm, {\n        onSearch: handleSearch,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }, this), weatherData && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(WeatherCard, {\n          weather: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n          forecast: forecastData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J0AqR3ONq2Ddb51NFnRCDb5ciSE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","WeatherForm","WeatherForecast","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","city","setCity","defaultWeather","name","main","temp","feels_like","humidity","pressure","weather","description","icon","wind","speed","visibility","defaultForecast","dt","Date","now","handleSearch","searchCity","Promise","resolve","setTimeout","mockWeather","Math","floor","random","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","message","forecast","_c","$RefreshReg$"],"sources":["D:/Full Stack/ReactExperiments/exp15/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport WeatherCard from './components/WeatherCard';\r\nimport WeatherForm from './components/WeatherForm';\r\nimport WeatherForecast from './components/WeatherForecast';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport ErrorMessage from './components/ErrorMessage';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [city, setCity] = useState('London');\r\n\r\n  // Default weather data for demonstration\r\n  const defaultWeather = {\r\n    name: 'London',\r\n    main: {\r\n      temp: 15,\r\n      feels_like: 13,\r\n      humidity: 65,\r\n      pressure: 1013\r\n    },\r\n    weather: [{\r\n      main: 'Clouds',\r\n      description: 'overcast clouds',\r\n      icon: '04d'\r\n    }],\r\n    wind: {\r\n      speed: 3.5\r\n    },\r\n    visibility: 10000\r\n  };\r\n\r\n  const defaultForecast = [\r\n    {\r\n      dt: Date.now() + 86400000,\r\n      main: { temp: 16, humidity: 70 },\r\n      weather: [{ main: 'Rain', description: 'light rain', icon: '10d' }],\r\n      wind: { speed: 4.2 }\r\n    },\r\n    {\r\n      dt: Date.now() + 172800000,\r\n      main: { temp: 18, humidity: 60 },\r\n      weather: [{ main: 'Clear', description: 'clear sky', icon: '01d' }],\r\n      wind: { speed: 2.8 }\r\n    },\r\n    {\r\n      dt: Date.now() + 259200000,\r\n      main: { temp: 14, humidity: 80 },\r\n      weather: [{ main: 'Clouds', description: 'few clouds', icon: '02d' }],\r\n      wind: { speed: 3.1 }\r\n    },\r\n    {\r\n      dt: Date.now() + 345600000,\r\n      main: { temp: 20, humidity: 55 },\r\n      weather: [{ main: 'Sunny', description: 'sunny', icon: '01d' }],\r\n      wind: { speed: 2.5 }\r\n    },\r\n    {\r\n      dt: Date.now() + 432000000,\r\n      main: { temp: 17, humidity: 65 },\r\n      weather: [{ main: 'Clouds', description: 'scattered clouds', icon: '03d' }],\r\n      wind: { speed: 3.8 }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Initialize with default data\r\n    setWeatherData(defaultWeather);\r\n    setForecastData(defaultForecast);\r\n  }, []);\r\n\r\n  const handleSearch = async (searchCity) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Simulate API call with timeout\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // For demo purposes, we'll use mock data\r\n      // In a real app, you would call a weather API here\r\n      const mockWeather = {\r\n        ...defaultWeather,\r\n        name: searchCity,\r\n        main: {\r\n          ...defaultWeather.main,\r\n          temp: Math.floor(Math.random() * 20) + 5\r\n        }\r\n      };\r\n      \r\n      setWeatherData(mockWeather);\r\n      setCity(searchCity);\r\n    } catch (err) {\r\n      setError('Failed to fetch weather data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <header className=\"app-header\">\r\n          <h1>Weather App</h1>\r\n          <p>Get current weather and forecast for any city</p>\r\n        </header>\r\n\r\n        <WeatherForm onSearch={handleSearch} loading={loading} />\r\n\r\n        {loading && <LoadingSpinner />}\r\n\r\n        {error && <ErrorMessage message={error} />}\r\n\r\n        {weatherData && !loading && !error && (\r\n          <>\r\n            <WeatherCard weather={weatherData} />\r\n            <WeatherForecast forecast={forecastData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}