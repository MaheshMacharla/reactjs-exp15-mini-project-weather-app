{"ast":null,"code":"import _objectSpread from\"D:/Full Stack/ReactExperiments/exp15/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./App.css';import WeatherCard from'./components/WeatherCard';import WeatherForm from'./components/WeatherForm';import WeatherForecast from'./components/WeatherForecast';import LoadingSpinner from'./components/LoadingSpinner';import ErrorMessage from'./components/ErrorMessage';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[weatherData,setWeatherData]=useState(null);const[forecastData,setForecastData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[city,setCity]=useState('London');// Default weather data for demonstration\nconst defaultWeather={name:'London',main:{temp:15,feels_like:13,humidity:65,pressure:1013},weather:[{main:'Clouds',description:'overcast clouds',icon:'04d'}],wind:{speed:3.5},visibility:10000};const defaultForecast=[{dt:Date.now()+86400000,main:{temp:16,humidity:70},weather:[{main:'Rain',description:'light rain',icon:'10d'}],wind:{speed:4.2}},{dt:Date.now()+172800000,main:{temp:18,humidity:60},weather:[{main:'Clear',description:'clear sky',icon:'01d'}],wind:{speed:2.8}},{dt:Date.now()+259200000,main:{temp:14,humidity:80},weather:[{main:'Clouds',description:'few clouds',icon:'02d'}],wind:{speed:3.1}},{dt:Date.now()+345600000,main:{temp:20,humidity:55},weather:[{main:'Sunny',description:'sunny',icon:'01d'}],wind:{speed:2.5}},{dt:Date.now()+432000000,main:{temp:17,humidity:65},weather:[{main:'Clouds',description:'scattered clouds',icon:'03d'}],wind:{speed:3.8}}];useEffect(()=>{// Initialize with default data\nsetWeatherData(defaultWeather);setForecastData(defaultForecast);},[]);const handleSearch=async searchCity=>{setLoading(true);setError(null);try{// Simulate API call with timeout\nawait new Promise(resolve=>setTimeout(resolve,1000));// For demo purposes, we'll use mock data\n// In a real app, you would call a weather API here\nconst mockWeather=_objectSpread(_objectSpread({},defaultWeather),{},{name:searchCity,main:_objectSpread(_objectSpread({},defaultWeather.main),{},{temp:Math.floor(Math.random()*20)+5})});setWeatherData(mockWeather);setCity(searchCity);}catch(err){setError('Failed to fetch weather data. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Get current weather and forecast for any city\"})]}),/*#__PURE__*/_jsx(WeatherForm,{onSearch:handleSearch,loading:loading}),loading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),error&&/*#__PURE__*/_jsx(ErrorMessage,{message:error}),weatherData&&!loading&&!error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(WeatherCard,{weather:weatherData}),/*#__PURE__*/_jsx(WeatherForecast,{forecast:forecastData})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","WeatherForm","WeatherForecast","LoadingSpinner","ErrorMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","city","setCity","defaultWeather","name","main","temp","feels_like","humidity","pressure","weather","description","icon","wind","speed","visibility","defaultForecast","dt","Date","now","handleSearch","searchCity","Promise","resolve","setTimeout","mockWeather","_objectSpread","Math","floor","random","err","className","children","onSearch","message","forecast"],"sources":["D:/Full Stack/ReactExperiments/exp15/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport WeatherCard from './components/WeatherCard';\r\nimport WeatherForm from './components/WeatherForm';\r\nimport WeatherForecast from './components/WeatherForecast';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport ErrorMessage from './components/ErrorMessage';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [city, setCity] = useState('London');\r\n\r\n  // Default weather data for demonstration\r\n  const defaultWeather = {\r\n    name: 'London',\r\n    main: {\r\n      temp: 15,\r\n      feels_like: 13,\r\n      humidity: 65,\r\n      pressure: 1013\r\n    },\r\n    weather: [{\r\n      main: 'Clouds',\r\n      description: 'overcast clouds',\r\n      icon: '04d'\r\n    }],\r\n    wind: {\r\n      speed: 3.5\r\n    },\r\n    visibility: 10000\r\n  };\r\n\r\n  const defaultForecast = [\r\n    {\r\n      dt: Date.now() + 86400000,\r\n      main: { temp: 16, humidity: 70 },\r\n      weather: [{ main: 'Rain', description: 'light rain', icon: '10d' }],\r\n      wind: { speed: 4.2 }\r\n    },\r\n    {\r\n      dt: Date.now() + 172800000,\r\n      main: { temp: 18, humidity: 60 },\r\n      weather: [{ main: 'Clear', description: 'clear sky', icon: '01d' }],\r\n      wind: { speed: 2.8 }\r\n    },\r\n    {\r\n      dt: Date.now() + 259200000,\r\n      main: { temp: 14, humidity: 80 },\r\n      weather: [{ main: 'Clouds', description: 'few clouds', icon: '02d' }],\r\n      wind: { speed: 3.1 }\r\n    },\r\n    {\r\n      dt: Date.now() + 345600000,\r\n      main: { temp: 20, humidity: 55 },\r\n      weather: [{ main: 'Sunny', description: 'sunny', icon: '01d' }],\r\n      wind: { speed: 2.5 }\r\n    },\r\n    {\r\n      dt: Date.now() + 432000000,\r\n      main: { temp: 17, humidity: 65 },\r\n      weather: [{ main: 'Clouds', description: 'scattered clouds', icon: '03d' }],\r\n      wind: { speed: 3.8 }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Initialize with default data\r\n    setWeatherData(defaultWeather);\r\n    setForecastData(defaultForecast);\r\n  }, []);\r\n\r\n  const handleSearch = async (searchCity) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Simulate API call with timeout\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // For demo purposes, we'll use mock data\r\n      // In a real app, you would call a weather API here\r\n      const mockWeather = {\r\n        ...defaultWeather,\r\n        name: searchCity,\r\n        main: {\r\n          ...defaultWeather.main,\r\n          temp: Math.floor(Math.random() * 20) + 5\r\n        }\r\n      };\r\n      \r\n      setWeatherData(mockWeather);\r\n      setCity(searchCity);\r\n    } catch (err) {\r\n      setError('Failed to fetch weather data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <header className=\"app-header\">\r\n          <h1>Weather App</h1>\r\n          <p>Get current weather and forecast for any city</p>\r\n        </header>\r\n\r\n        <WeatherForm onSearch={handleSearch} loading={loading} />\r\n\r\n        {loading && <LoadingSpinner />}\r\n\r\n        {error && <ErrorMessage message={error} />}\r\n\r\n        {weatherData && !loading && !error && (\r\n          <>\r\n            <WeatherCard weather={weatherData} />\r\n            <WeatherForecast forecast={forecastData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}